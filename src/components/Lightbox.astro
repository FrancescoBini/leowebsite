<div id="lightbox" class="lightbox hidden fixed inset-0 z-50 bg-black bg-opacity-75 flex items-center justify-center">
  <button id="close-lightbox" class="absolute top-4 right-4 text-white hover:text-gray-300">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
    </svg>
  </button>
  <img id="lightbox-image" src="" alt="Enlarged image" class="max-h-[90vh] max-w-[90vw] object-contain" />
</div>

<script>
  function initLightbox() {
    const lightbox = document.getElementById('lightbox');
    const lightboxImage = document.getElementById('lightbox-image');
    const closeButton = document.getElementById('close-lightbox');
    
    // Find all images that should be clickable (you can adjust this selector)
    const images = document.querySelectorAll('.main-image, .small-image, .chairs-render, .blocks-render, .shoes-render');
    
    images.forEach(img => {
      img.style.cursor = 'pointer';
      img.addEventListener('click', () => {
        if (lightbox && lightboxImage && img instanceof HTMLImageElement) {
          lightboxImage.src = img.src;
          lightbox.classList.remove('hidden');
          document.body.style.overflow = 'hidden'; // Prevent scrolling when lightbox is open
        }
      });
    });

    // Close lightbox when clicking the close button
    closeButton?.addEventListener('click', () => {
      if (lightbox) {
        lightbox.classList.add('hidden');
        document.body.style.overflow = ''; // Restore scrolling
      }
    });

    // Close lightbox when clicking outside the image
    lightbox?.addEventListener('click', (e) => {
      if (e.target === lightbox) {
        lightbox.classList.add('hidden');
        document.body.style.overflow = ''; // Restore scrolling
      }
    });

    // Close lightbox with Escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && lightbox) {
        lightbox.classList.add('hidden');
        document.body.style.overflow = ''; // Restore scrolling
      }
    });
  }

  // Initialize lightbox when the page loads
  document.addEventListener('DOMContentLoaded', initLightbox);

  // Re-initialize lightbox when the page content changes (for Astro view transitions)
  document.addEventListener('astro:page-load', initLightbox);
</script>

<style>
  .lightbox {
    transition: opacity 0.3s ease-in-out;
  }
  
  .lightbox.hidden {
    opacity: 0;
    pointer-events: none;
  }
  
  .lightbox:not(.hidden) {
    opacity: 1;
  }
</style> 