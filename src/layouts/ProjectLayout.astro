---
import Lightbox from "../components/Lightbox.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title} - Leonardo Possati</title>
    <style>
      :root {
        /* Reference dimensions based on 14-inch MacBook Pro */
        --reference-width: 1512px;
        --max-reference-width: 1550px;
        --scale-factor: 1;
        
        /* Base sizes that will be scaled */
        --base-padding: 2rem;
        --base-gap: 2rem;
        --base-title-size: 2.5rem;
        --base-text-size: 1.1rem;
        --base-back-size: 1rem;
        --base-content-width: 500px;
        --base-container-width: 1400px;
      }
      
      body {
        margin: 0;
        padding: 0;
        font-family: "Helvetica Neue", Helvetica, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Arial, sans-serif;
        background-color: rgb(250, 247, 242);
        color: black;
        height: 100vh;
        overflow: hidden;
        position: relative;
      }
      
      /* Container to maintain proportional layout */
      .wrapper {
        width: 100%;
        height: 100vh;
        max-width: var(--max-reference-width);
        margin: 0 auto;
        position: relative;
      }
      
      .container {
        display: grid;
        grid-template-columns: 0.8fr 1.2fr;
        gap: var(--base-gap);
        padding: var(--base-padding);
        max-width: var(--base-container-width);
        margin: 0;
        height: 100vh;
        box-sizing: border-box;
      }
      
      .back-button {
        position: fixed;
        top: var(--base-padding);
        left: var(--base-padding);
        text-decoration: none;
        color: black;
        font-size: var(--base-back-size);
        font-weight: 300;
        z-index: 10;
      }
      
      .content {
        padding-top: var(--base-padding);
        padding-left: 0;
        max-width: var(--base-content-width);
        height: calc(100vh - (var(--base-padding) * 2));
        position: relative;
      }
      
      .title {
        font-size: var(--base-title-size);
        font-weight: bold;
        margin-bottom: var(--base-gap);
        margin-left: 0;
      }
      
      .description {
        font-size: var(--base-text-size);
        line-height: 1.6;
        margin-left: 0;
        height: calc(100% - 6rem);
        overflow-y: auto;
        padding-right: 1rem;
      }
      
      .description p {
        margin: 0 0 3rem 0;
      }
      
      .description p:last-child {
        margin-bottom: 2rem;
      }
      
      .images {
        display: grid;
        grid-template-rows: 2fr 1fr;
        gap: calc(var(--base-gap) * 0.5);
        height: calc(100vh - (var(--base-padding) * 2));
        position: sticky;
        top: var(--base-padding);
      }
      
      .main-image {
        width: 100%;
        height: auto;
        aspect-ratio: 16/9;
        object-fit: cover;
        transition: transform 0.3s ease;
      }
      
      .main-image:hover {
        transform: scale(1.02);
      }
      
      .small-images {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: calc(var(--base-gap) * 0.5);
      }
      
      .small-image {
        width: 100%;
        aspect-ratio: 16/9;
        object-fit: cover;
        transition: transform 0.3s ease;
      }
      
      .small-image:hover {
        transform: scale(1.02);
      }
      
      img {
        border-radius: 4px;
        background-color: #f5f5f5;
      }

      /* Customize scrollbar */
      .description::-webkit-scrollbar {
        width: 6px;
      }
      
      .description::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 3px;
      }
      
      .description::-webkit-scrollbar-thumb {
        background: #888;
        border-radius: 3px;
      }
      
      .description::-webkit-scrollbar-thumb:hover {
        background: #555;
      }

      /* Scaling for screens larger than reference width */
      @media screen and (min-width: 1551px) {
        :root {
          /* Calculate proportional scaling */
          --scale-factor: calc(100vw / var(--max-reference-width));
          
          /* Apply scaling to base sizes with controlled growth */
          --base-padding: calc(2rem * min(1.2, var(--scale-factor)));
          --base-gap: calc(2rem * min(1.2, var(--scale-factor)));
          
          /* Increase font sizes by 20-35% */
          --base-title-size: calc(2.5rem * min(1.35, var(--scale-factor) * 1.2));
          --base-text-size: calc(1.1rem * min(1.35, var(--scale-factor) * 1.2));
          --base-back-size: calc(1rem * min(1.35, var(--scale-factor) * 1.2));
          
          /* Scale content width proportionally */
          --base-content-width: calc(500px * min(1.5, var(--scale-factor) * 1.2));
          --base-container-width: calc(1400px * min(1.5, var(--scale-factor) * 1.2));
        }
        
        /* For screens wider than reference, apply container scaling */
        .wrapper {
          max-width: none;
          width: 100%;
        }
        
        /* Adjust image grid spacing */
        .images {
          gap: calc((var(--base-gap) * 0.5) * var(--scale-factor));
        }
        
        .small-images {
          gap: calc((var(--base-gap) * 0.5) * var(--scale-factor));
        }
      }
    </style>
    <script>
      // Add scroll event listener to handle scrolling anywhere on the page
      document.addEventListener('DOMContentLoaded', () => {
        const description = document.querySelector('.description');
        
        // Handle wheel events anywhere on the page
        document.body.addEventListener('wheel', (e) => {
          e.preventDefault(); // Prevent default scroll
          
          // Scroll the description div
          if (description) {
            description.scrollTop += e.deltaY;
          }
        }, { passive: false });
        
        // Add resize listener to apply custom scaling
        window.addEventListener('resize', adjustForScreenSize);
        
        // Run once on load
        adjustForScreenSize();
      });
      
      function adjustForScreenSize() {
        const referenceWidth = 1550;
        const currentWidth = window.innerWidth;
        
        // Only apply scaling for screens larger than the reference
        if (currentWidth > referenceWidth) {
          // Calculate scaling factor (capped to prevent excessive scaling)
          const scaleFactor = Math.min(1.5, currentWidth / referenceWidth);
          
          // Apply scaling factor to document root for CSS variable access
          document.documentElement.style.setProperty('--scale-factor', scaleFactor.toString());
          
          // Calculate and set the content width based on the viewport
          const contentWidth = Math.min(500 * scaleFactor * 1.2, currentWidth * 0.3);
          document.documentElement.style.setProperty('--base-content-width', `${contentWidth}px`);
          
          // Calculate and set the container width based on the viewport
          const containerWidth = Math.min(1400 * scaleFactor * 1.2, currentWidth * 0.9);
          document.documentElement.style.setProperty('--base-container-width', `${containerWidth}px`);
        } else {
          // Reset to default values for smaller screens
          document.documentElement.style.setProperty('--scale-factor', '1');
          document.documentElement.style.setProperty('--base-content-width', '500px');
          document.documentElement.style.setProperty('--base-container-width', '1400px');
        }
      }
    </script>
  </head>
  <body>
    <div class="wrapper">
      <a href="/" class="back-button">back</a>
      <div class="container">
        <div class="content">
          <h1 class="title">{title}</h1>
          <div class="description">
            <slot />
          </div>
        </div>
        <div class="images">
          <img id="main-image" class="main-image" alt="Main project image" />
          <div class="small-images">
            <img id="small-image-1" class="small-image" alt="Additional project image 1" />
            <img id="small-image-2" class="small-image" alt="Additional project image 2" />
          </div>
        </div>
      </div>
    </div>
    <Lightbox />
  </body>
</html> 