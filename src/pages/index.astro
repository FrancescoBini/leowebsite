---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import createSlug from "../lib/createSlug"

const posts = (await getCollection("blog")).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const last_posts = posts.slice(0, 3);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Leonardo Possati - Designer</title>
    <style>
      :root {
        /* Reference dimensions based on 14-inch MacBook Pro */
        --reference-width: 1512px;
        --max-reference-width: 1550px;
        --scale-factor: 1;
        
        /* Base sizes that will be scaled */
        --base-padding: 2rem;
        --base-name-size: 3.5rem;
        --base-tagline-size: 1.2rem;
        --base-nav-size: 1.2rem;
        --base-nav-spacing: 1rem;
        --base-section-width: 600px;
        
        /* Proportional constraints */
        --section-width-ratio: 0.4; /* 40% of viewport width */
        
        /* Mobile reference dimensions */
        --mobile-reference-width: 375px;
        --mobile-max-width: 440px;
        --mobile-scale-factor: 1;
        
        /* Mobile base sizes */
        --mobile-padding: 1.5rem;
        --mobile-name-size: 2.5rem;
        --mobile-tagline-size: 1rem;
        --mobile-nav-size: 1.1rem;
        --mobile-nav-spacing: 0.8rem;
      }

      body {
        margin: 0;
        padding: 0;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
        color: white;
        height: 100vh;
        overflow: hidden;
      }
      
      .background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url('/images/background.png');
        background-size: cover;
        background-position: center;
        z-index: 0;
      }
      
      /* Container to maintain proportional layout */
      .container {
        width: 100%;
        height: 100vh;
        max-width: var(--max-reference-width);
        margin: 0 auto;
        position: relative;
      }
      
      /* For screens wider than reference, apply container scaling */
      @media screen and (min-width: 1551px) {
        .container {
          max-width: none;
          width: 100%;
        }
      }
      
      .content {
        display: flex;
        height: 100vh;
        padding: var(--base-padding);
        position: relative;
        z-index: 1;
        box-sizing: border-box;
        padding-left: calc(var(--base-padding) + 20px);
      }
      
      .left-section {
        flex: 0 0 auto;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        position: relative;
        height: calc(100vh - (var(--base-padding) * 2));
        width: min(var(--base-section-width), calc(var(--section-width-ratio) * 100vw));
        padding-bottom: 20px;
      }
      
      .header {
        width: 100%;
      }
      
      .name {
        font-size: var(--base-name-size);
        font-weight: bold;
        margin-bottom: 1rem;
      }
      
      .tagline {
        font-size: var(--base-tagline-size);
        font-style: italic;
        margin-bottom: 1rem;
        opacity: 0.9;
        white-space: nowrap;
        max-width: 100%;
      }
      
      .more-link {
        color: white;
        text-decoration: underline;
        font-size: 1rem;
      }
      
      .navigation {
        list-style: none;
        padding: 0;
        margin: 0;
        margin-bottom: 20px;
      }
      
      .navigation li {
        margin-bottom: var(--base-nav-spacing);
      }
      
      .navigation a {
        color: white;
        text-decoration: none;
        font-size: var(--base-nav-size);
        transition: opacity 0.2s;
      }
      
      .navigation a:hover {
        opacity: 0.7;
      }

      /* Scaling for screens larger than reference width */
      @media screen and (min-width: 1551px) {
        :root {
          /* Calculate proportional scaling */
          --scale-factor: calc(100vw / var(--max-reference-width));
          
          /* Apply scaling to base sizes with controlled growth */
          --base-padding: calc(2rem * min(1.2, var(--scale-factor)));
          /* Increase font sizes by 20% (additional 10%) */
          --base-name-size: calc(3.5rem * min(1.35, var(--scale-factor) * 1.2));
          --base-tagline-size: calc(1.2rem * min(1.35, var(--scale-factor) * 1.2));
          --base-nav-size: calc(1.2rem * min(1.35, var(--scale-factor) * 1.2));
          --base-nav-spacing: calc(1rem * min(1.2, var(--scale-factor)));
        }
        
        /* Maintain proportional spacing */
        .content {
          padding-left: calc((var(--base-padding) * 1.5) + (20px * var(--scale-factor)));
        }
        
        /* Scale the bottom padding and margin for larger screens */
        .left-section {
          padding-bottom: calc(20px * var(--scale-factor));
          width: min(calc(var(--base-section-width) * 1.7), calc(var(--section-width-ratio) * 100vw * 1.7));
        }
        
        .navigation {
          margin-bottom: calc(20px * var(--scale-factor));
        }
        
        /* Fix tagline text overflow on larger screens */
        .tagline {
          white-space: nowrap;
          overflow: visible;
          width: auto;
          max-width: 100%;
        }
        
        /* Increase more-link font size by 20% */
        .more-link {
          font-size: 1.2rem;
        }
      }
      
      /* Mobile styles for iPhone devices up to iPhone 16 Pro Max */
      @media screen and (max-width: 440px) {
        :root {
          /* Calculate proportional scaling for mobile */
          --mobile-scale-factor: calc(100vw / var(--mobile-reference-width));
          
          /* Apply mobile scaling to base sizes */
          --base-padding: var(--mobile-padding);
          --base-name-size: var(--mobile-name-size);
          --base-tagline-size: var(--mobile-tagline-size);
          --base-nav-size: var(--mobile-nav-size);
          --base-nav-spacing: var(--mobile-nav-spacing);
        }
        
        body {
          overflow-y: auto; /* Enable native scrolling */
        }
        
        .container {
          height: auto;
          min-height: 100vh;
        }
        
        .content {
          flex-direction: column;
          align-items: center;
          padding: var(--base-padding);
          height: auto;
          min-height: 100vh;
          text-align: center;
          justify-content: center; /* Center content vertically */
        }
        
        .left-section {
          flex: 1;
          width: 100%;
          height: auto;
          min-height: unset; /* Remove fixed height constraint */
          display: flex;
          flex-direction: column;
          align-items: center;
          padding-bottom: 0;
          justify-content: flex-start;
          gap: 2rem;
        }
        
        .header {
          width: 100%;
          display: flex;
          flex-direction: column;
          align-items: center;
          margin-bottom: 0;
        }
        
        .name {
          font-size: var(--base-name-size);
          text-align: center;
          margin-top: 1rem;
        }
        
        .tagline {
          font-size: var(--base-tagline-size);
          white-space: normal;
          text-align: center;
          max-width: 90%;
        }
        
        .navigation {
          width: 100%;
          display: flex;
          flex-direction: column;
          align-items: center;
          margin-top: 0;
          margin-bottom: 2rem;
        }
        
        .navigation li {
          margin-bottom: var(--base-nav-spacing);
          text-align: center;
        }
        
        .more-link {
          font-size: 0.9rem;
          margin-bottom: 1rem;
        }
      }
      
      /* Additional adjustments for larger iPhones (iPhone 14 Pro Max and similar) */
      @media screen and (min-width: 390px) and (max-width: 440px) {
        .content {
          justify-content: center;
        }
        
        .left-section {
          gap: 3rem; /* Increase gap for better distribution on larger screens */
        }
        
        /* Ensure navigation is centered on screen */
        .navigation {
          margin-top: 1rem;
        }
      }
    </style>
  </head>
  <body>
    <div class="background"></div>
    <div class="container">
      <div class="content">
        <div class="left-section">
          <div class="header">
            <h1 class="name">Leonardo Possati</h1>
            <p class="tagline">Exploring the interplay of art, design and materiality. Where precision meets spontaneity.</p>
            <a href="/about" class="more-link">more about me</a>
          </div>
          <nav>
            <ul class="navigation">
              <li><a href="/shell-chair">SHELL CHAIR</a></li>
              <li><a href="/ti-lamp">TI LAMP</a></li>
              <li><a href="/domus-bulgari">DOMUS BULGARI</a></li>
              <li><a href="/light-lines">LIGHT LINES</a></li>
              <li><a href="/boba-table">BOBA TABLE</a></li>
              <li><a href="/foldy">FOLDY</a></li>
              <li><a href="/otio">OTIO</a></li>
              <li><a href="/sonus">SONUS</a></li>
              <li><a href="/renders">RENDERS</a></li>
            </ul>
          </nav>
        </div>
      </div>
    </div>

    <script>
      // Add a resize listener to apply custom scaling
      window.addEventListener('resize', adjustForScreenSize);
      
      // Run once on load
      document.addEventListener('DOMContentLoaded', () => {
        adjustForScreenSize();
        adjustMobileLayout();
      });
      
      function adjustMobileLayout() {
        const currentWidth = window.innerWidth;
        const currentHeight = window.innerHeight;
        
        // Only apply for mobile devices
        if (currentWidth <= 440) {
          const leftSection = document.querySelector('.left-section') as HTMLElement;
          const header = document.querySelector('.header') as HTMLElement;
          const navigation = document.querySelector('.navigation') as HTMLElement;
          
          if (leftSection && header && navigation) {
            // For taller screens (like iPhone 14 Pro Max), adjust spacing
            if (currentHeight > 800) {
              // Calculate appropriate gap based on screen height
              const gapSize = Math.max(3, currentHeight / 200); // Adjust divisor as needed
              leftSection.style.gap = `${gapSize}rem`;
              
              // Add some top margin to the navigation for better centering
              navigation.style.marginTop = `${gapSize / 2}rem`;
            } else {
              // Reset for smaller screens
              leftSection.style.gap = '2rem';
              navigation.style.marginTop = '0';
            }
          }
        }
      }
      
      function adjustForScreenSize() {
        const referenceWidth = 1550;
        const mobileReferenceWidth = 375;
        const mobileMaxWidth = 440;
        const currentWidth = window.innerWidth;
        
        // Mobile scaling (iPhone devices up to iPhone 16 Pro Max)
        if (currentWidth <= mobileMaxWidth) {
          // Calculate mobile scaling factor based on reference width
          const mobileScaleFactor = Math.min(1.2, currentWidth / mobileReferenceWidth);
          
          // Apply mobile scaling factor to document root
          document.documentElement.style.setProperty('--mobile-scale-factor', mobileScaleFactor.toString());
          
          // Scale font sizes proportionally for mobile
          const nameSize = Math.min(2.5 * mobileScaleFactor, 3);
          const taglineSize = Math.min(1 * mobileScaleFactor, 1.2);
          const navSize = Math.min(1.1 * mobileScaleFactor, 1.3);
          
          document.documentElement.style.setProperty('--mobile-name-size', `${nameSize}rem`);
          document.documentElement.style.setProperty('--mobile-tagline-size', `${taglineSize}rem`);
          document.documentElement.style.setProperty('--mobile-nav-size', `${navSize}rem`);
          
          // Adjust layout for different mobile screen sizes
          adjustMobileLayout();
          
          console.log(`Mobile: Screen width: ${currentWidth}px, Scale factor: ${mobileScaleFactor}, Name size: ${nameSize}rem`);
        }
        // Desktop scaling for screens larger than reference
        else if (currentWidth > referenceWidth) {
          // Calculate scaling factor (capped to prevent excessive scaling)
          const scaleFactor = Math.min(1.2, currentWidth / referenceWidth);
          
          // Apply scaling factor to document root for CSS variable access
          document.documentElement.style.setProperty('--scale-factor', scaleFactor.toString());
          
          // Calculate and set the section width based on the viewport
          const sectionWidth = Math.min(600 * scaleFactor, currentWidth * 0.4);
          document.documentElement.style.setProperty('--base-section-width', `${sectionWidth}px`);
          
          console.log(`Desktop: Screen width: ${currentWidth}px, Scale factor: ${scaleFactor}, Section width: ${sectionWidth}px`);
        } else {
          // Reset scaling for standard desktop screens
          document.documentElement.style.setProperty('--scale-factor', '1');
          document.documentElement.style.setProperty('--base-section-width', '600px');
          console.log(`Standard: Screen width: ${currentWidth}px, Scale factor: 1 (default), Section width: 600px`);
        }
      }
      
      // Also adjust on orientation change
      window.addEventListener('orientationchange', () => {
        setTimeout(() => {
          adjustForScreenSize();
          adjustMobileLayout();
        }, 100);
      });
    </script>
  </body>
</html>
